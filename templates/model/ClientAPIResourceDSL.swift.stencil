//
// Copyright 2020 Swiftkube Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

import Foundation
import SwiftkubeModel

// MARK: - {{ groupVersion|GV.type }}API

public protocol {{ groupVersion|GV.type }}API: Sendable {
{% for resource in resources %}
	var {{ resource.gvk|GVK.pluralVariable }}: {% if resource.isNamespaced %}NamespacedGenericKubernetesClient{% else %}ClusterScopedGenericKubernetesClient{% endif %}<{{ resource.gvk|GVK.type }}> { get }{% endfor %}
}

/// DSL for `{{ groupVersion|GV.raw }}` API Group
public extension KubernetesClient {

	final class {{ groupVersion|GV.type }}: {{ groupVersion|GV.type }}API {
		private let client: KubernetesClient

		internal init(_ client: KubernetesClient) {
			self.client = client
		}
{% for resource in resources %}
		public var {{ resource.gvk|GVK.pluralVariable }}: {% if resource.isNamespaced %}NamespacedGenericKubernetesClient{% else %}ClusterScopedGenericKubernetesClient{% endif %}<{{ resource.gvk|GVK.type }}> {
			client.{% if resource.isNamespaced %}namespaceScoped{% else %}clusterScoped{% endif%}(for: {{ resource.gvk|GVK.type }}.self)
		}{% endfor %}
	}

	var {{ groupVersion|GV.typeVariable }}: {{ groupVersion|GV.type }}API {
		{{ groupVersion|GV.type }}(self)
	}
}
